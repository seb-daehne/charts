apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "paperless-k8s.fullname" . }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    app.kubernetes.io/name: {{ include "paperless-k8s.name" . }}
    helm.sh/chart: {{ include "paperless-k8s.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "paperless-k8s.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "paperless-k8s.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
          #  {{- if .Values.secrets.secretKey }}
            - name: PAPERLESS_SECRET_KEY
              valueFrom:
                secretKeyRef: 
                  name: {{ .Values.secrets.secretKey.secret }}
                  key: {{ .Values.secrets.secretKey.key }}
          # {{- end }}
          #  {{- if .Values.secrets.databaseUser }}
            - name: PAPERLESS_DBUSER
              valueFrom:
                secretKeyRef: 
                  name: {{ .Values.secrets.databaseUser.secret }}
                  key: {{ .Values.secrets.databaseUser.key }}
          # {{- end }}
          #  {{- if .Values.secrets.databasePassword }}
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef: 
                  name: {{ .Values.secrets.databasePassword.secret }}
                  key: {{ .Values.secrets.databasePassword.key }}
          #  {{- end}}
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - name: data
            mountPath: /data
            {{- if and .Values.persistence.enabled .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}
            {{- end }}            
      {{- if .Values.image.pullSecrets }}      
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      volumes:
      - name: data
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "paperless-k8s.fullname" . }}{{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
